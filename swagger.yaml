swagger: "2.0"
info:
  title: "dp-legacy-cache-api"
  description: "REST API for managing cache control information for pages within the legacy CMS"
  version: 1.0.0
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
basePath: "/v1"
schemes:
  - http
tags:
  - name: "private"
paths:          
  /cache-times/{id}:
    get:
      tags:
        - "cache times"
      summary: "Returns a cache time"
      description: "Returns a cache time for a given id"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: id
          description: "Unique id of cache time"
          type: string
          required: true
      responses:
        200:
          description: "Successfully returned a cache time for a given id"
          schema:
            $ref: "#/definitions/CacheTime"
        400:
          description: "Invalid request, cache time id was in the wrong format"
        404:
          description: "No cache time was found using the id provided"
        500:
          $ref: '#/responses/InternalError'
    put:
      tags:
        - "cache times"
      summary: "Updates or creates a cache time"
      description: "Updates a cache time if it exists or creates a new one for a given id"
      consumes:
        - "application/json"
      parameters:
        - in: path
          name: id
          description: "Unique id of cache time"
          type: string
          required: true
        - in: body
          name: body
          description: "Cache time object that needs to be created or updated (without id)"
          required: true
          schema:
            $ref: "#/definitions/CacheTimePutRequest"
      responses:
        204:
          description: "Cache time successfully updated or created"
        400:
          description: |
            Invalid request, reasons can be one of the following:
              * cache time id was incorrect
              * missing required fields
              * empty request body
              * unknown extra fields
              * wrong type for field
  /health:
    get:
      tags:
        - private
      summary: "Returns API's health status"
      description: "Returns health status of the API and checks on dependent services"
      produces:
        - application/json
      responses:
        200:
          description: "Successfully returns OK status with checks of dependent services"
          schema:
            $ref: "#/definitions/Health"
        429:
          description: "Services warming up or degraded (at least one check in WARNING or CRITICAL status)"
        500:
          $ref: "#/responses/InternalError"

responses:
  InternalError:
    description: "Failed to process the request due to an internal error"

definitions:
  CacheTime:
    type: object
    required:
      - id
      - path
    properties:
      id:
        $ref: "#/definitions/CacheTimeID"
      path:
        description: "Path for which caching is set"
        type: string
        example: "admin"
      collection_id:
        description: "Collection ID - used for grouping and filtering of cache time objects"
        type: string
        example: "example-1a19e3462937d85804752375daa00ba41d1b6625d396f21000e3c4571ebf2606"
      release_time:
        description: "Release time in ISO-8601 format"
        type: string
        format: date-time
        example: "2024-01-15T12:00:00Z"
  CacheTimePutRequest:
    type: object
    required:
      - path
    properties:
      path:
        description: "Path for which caching is set"
        type: string
        example: "admin"
      collection_id:
        description: "Collection ID - used for grouping and filtering of cache time objects"
        type: string
        example: "example-1a19e3462937d85804752375daa00ba41d1b6625d396f21000e3c4571ebf2606"
      release_time:
        description: "Release time in ISO-8601 format"
        type: string
        format: date-time
        example: "2024-01-15T12:00:00Z"      
  CacheTimeID:
    description: "Unique identifier for a cache time, represented as an MD5 hash of the path"
    type: string
    example: "a1b2c3d4e5f67890123456789abcdef0"
  Health:
    type: object
    properties:
      status:
        type: string
        description: "The status of the API"
        enum: ["OK", "WARNING", "CRITICAL"]
      version:
        type: object
        properties:
          build_time:
            type: string
            description: "The build date and time of the API"
            example: "2020-06-11T12:49:20+01:00"
          git_commit:
            type: string
            description: "The git commit hash of the API"
            example: "7c2febbf2b818175112478d4ffbadbee1b654f63"
          language:
            type: string
            description: "The programming language used to implement API"
            example: "go"
          language_version:
            type: string
            description: "The version of the programming language used to implement API"
            example: "go1.14.3"
          version:
            type: string
            description: "The version of API"
            example: "1.0.0"
      uptime:
        type: string
        description: "The uptime of API"
        example: "34516"
      start_time:
        type: string
        description: "The start date and time of API running"
        example: "2020-06-11T11:49:21.520922Z"
      checks:
        type: array
        items:
          $ref: '#/definitions/HealthChecker'
  HealthChecker:
    type: object
    properties:
      name:
        type: string
        description: "The name of external service used by API"
        enum: ["mongodb"]
      status:
        type: string
        description: "The status of the external service"
        enum: ["OK", "WARNING", "CRITICAL"]
      message:
        type: string
        description: "The message status of the external service"
        example: "mongodb is OK"
      last_checked:
        type: string
        description: "The last health check date and time of the external service"
        example: "2020-06-11T11:49:50.330089Z"
      last_success:
        type: string
        description: "The last successful health check date and time of the external service"
        example: "2020-06-11T11:49:50.330089Z"
      last_failure:
        type: string
        description: "The last failed health check date and time of the external service"
        example: "2019-09-22T11:48:51.0000001Z"
